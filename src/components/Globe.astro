---
---

<div class="globe-mount"></div>

<script>
  import * as THREE from "three/build/three.min.js";
  import * as topojson from "topojson-client";

  // D3 modules
  import * as d3Array from "d3-array";
  import * as d3Collection from "d3-collection";
  import * as d3Timer from "d3-timer";
  import * as d3Request from "d3-request";
  import * as d3Dispatch from "d3-dispatch";

  // Local
  // import { vertex } from "../lib/vertex.js";
  import { wireframe } from "../lib/wireframe.js";
  import { graticule10 } from "../lib/graticule10.js";

  const d3 = {
    ...d3Array,
    ...d3Collection,
    ...d3Timer,
    ...d3Request,
    ...d3Dispatch
  };

  let width: number = 600,
    height = 600,
    radius = 228,
    mesh,
    graticule,
    scene = new THREE.Scene(),
    camera = new THREE.PerspectiveCamera(70, width / height, 1, 1000),
    renderer = new THREE.WebGLRenderer({ alpha: true });

  camera.position.z = 400;
  renderer.setPixelRatio(window.devicePixelRatio);
  renderer.setSize(width, height);
  const mount = document.querySelector(".globe-mount");
  mount.appendChild(renderer.domElement);

  d3.json("https://unpkg.com/world-atlas@1/world/50m.json", function (error, topology) {
    if (error) throw error;

    scene.add(
      (graticule = wireframe(
        graticule10(),
        new THREE.LineBasicMaterial({ color: 0xaaaaaa })
      ))
    );

    scene.add(
      (mesh = wireframe(
        topojson.mesh(topology, topology.objects.land),
        new THREE.LineBasicMaterial({ color: 0xff0000 })
      ))
    );

    d3.timer(function (t) {
      graticule.rotation.x = mesh.rotation.x =
        (Math.sin(t / 11000) * Math.PI) / 3 - Math.PI / 2;
      graticule.rotation.z = mesh.rotation.z = t / 10000;
      renderer.render(scene, camera);
    });
  });
</script>
